// Generated by CoffeeScript 1.6.3
(function() {
  var OssecJsonAlertAttributesExtractor, moment;

  moment = require('moment');

  OssecJsonAlertAttributesExtractor = (function() {
    function OssecJsonAlertAttributesExtractor(timeStamp, ossecAlert, event) {
      this.timeStamp = timeStamp;
      this.ossecAlert = ossecAlert;
      this.event = event;
      this.attributes = {};
      this.parsingMethods = [this.sourceIp(), this.sourcePort(), this.destinationIp(), this.destinationPort(), this.severity(), this.ruleId(), this.description(), this.component(), this.classification(), this.fileName(), this.newMd5(), this.oldMd5(), this.newSha1(), this.oldSha1(), this.device(), this.message(), this.user(), this.timestamp()];
    }

    OssecJsonAlertAttributesExtractor.prototype.run = function() {
      var method, _i, _len, _ref;
      if (debug) {
        console.log("Running OSSEC Alert Attributes Extractor...");
      }
      _ref = this.parsingMethods;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        method = _ref[_i];
        if (method !== void 0) {
          method();
        }
      }
      return this.attributes;
    };

    OssecJsonAlertAttributesExtractor.prototype.timestamp = function() {
      this.moment = moment(this.timeStamp);
      this.attributes["timeStamp"] = this.moment.utc();
      if (debug) {
        return console.log("Timestamp: " + this.moment.utc());
      }
    };

    OssecJsonAlertAttributesExtractor.prototype.device = function() {
      if (this.component != null) {
        this.dev = this.component.split(/\-\>/)[0];
      }
      this.device = this.dev.replace(/\)/g, '').replace(/\(/g, '').replace(/any/g, '').replace(/\s+/g, '');
      this.attributes["device"] = this.device;
      if (debug) {
        return console.log("Device: " + this.device);
      }
    };

    OssecJsonAlertAttributesExtractor.prototype.sourcePort = function() {
      this.sourcePort = this.ossecAlert.src_port;
      this.attributes["sourcePort"] = this.sourcePort;
      if (debug) {
        return console.log("Source Port: " + this.sourcePort);
      }
    };

    OssecJsonAlertAttributesExtractor.prototype.sourceIp = function() {
      this.sourceIp = this.ossecAlert.src_ip;
      this.attributes["sourceIp"] = this.sourceIp;
      if (debug) {
        return console.log("Source Ip: " + this.sourceIp);
      }
    };

    OssecJsonAlertAttributesExtractor.prototype.destinationIp = function() {
      this.destinationIp = this.ossecAlert.dst_ip;
      this.attributes["destinationIp"] = this.destinationIp;
      if (debug) {
        return console.log("Destination Ip: " + this.destinationIp);
      }
    };

    OssecJsonAlertAttributesExtractor.prototype.destinationPort = function() {
      this.destinationPort = this.ossecAlert.dst_port;
      this.attributes["destinationPort"] = this.destinationPort;
      if (debug) {
        return console.log("Destination Port: " + this.destinationPort);
      }
    };

    OssecJsonAlertAttributesExtractor.prototype.fileName = function() {
      this.fileName = this.ossecAlert.file;
      this.attributes["fileName"] = this.fileName;
      if (debug) {
        return console.log("File Name: " + this.fileName);
      }
    };

    OssecJsonAlertAttributesExtractor.prototype.newMd5 = function() {
      this.newMd5 = this.ossecAlert.md5_new;
      this.attributes["newMd5"] = this.newMd5;
      if (debug) {
        return console.log("New MD5: " + this.newMd5);
      }
    };

    OssecJsonAlertAttributesExtractor.prototype.oldMd5 = function() {
      this.oldMd5 = this.ossecAlert.md5_old;
      this.attributes["oldMd5"] = this.oldMd5;
      if (debug) {
        return console.log("Old MD5: " + this.oldMd5);
      }
    };

    OssecJsonAlertAttributesExtractor.prototype.newSha1 = function() {
      this.newSha1 = this.ossecAlert.sha1_new;
      this.attributes["newSha1"] = this.newSha1;
      if (debug) {
        return console.log("New SHA-1: " + this.newSha1);
      }
    };

    OssecJsonAlertAttributesExtractor.prototype.oldSha1 = function() {
      this.oldSha1 = this.ossecAlert.sha1_old;
      this.attributes["oldSha1"] = this.oldSha1;
      if (debug) {
        return console.log("Old SHA-1: " + this.oldSha1);
      }
    };

    OssecJsonAlertAttributesExtractor.prototype.severity = function() {
      this.severity = this.ossecAlert.crit;
      this.attributes["severity"] = this.severity;
      if (debug) {
        return console.log("Severity: " + this.severity);
      }
    };

    OssecJsonAlertAttributesExtractor.prototype.ruleId = function() {
      this.ruleId = this.ossecAlert.id;
      this.attributes["ruleId"] = this.ruleId;
      if (debug) {
        return console.log("RuleId: " + this.ruleId);
      }
    };

    OssecJsonAlertAttributesExtractor.prototype.description = function() {
      this.description = this.ossecAlert.description;
      this.attributes["description"] = this.description;
      if (debug) {
        return console.log("Description: " + this.description);
      }
    };

    OssecJsonAlertAttributesExtractor.prototype.component = function() {
      this.component = this.ossecAlert.component;
      this.attributes["component"] = this.component;
      if (debug) {
        return console.log("Component: " + this.component);
      }
    };

    OssecJsonAlertAttributesExtractor.prototype.classification = function() {
      this.classification = this.ossecAlert.classification;
      this.attributes["classification"] = this.classification;
      if (debug) {
        return console.log("Classification: " + this.classification);
      }
    };

    OssecJsonAlertAttributesExtractor.prototype.message = function() {
      this.message = this.ossecAlert.message;
      this.attributes["message"] = this.message;
      if (debug) {
        return console.log("Message: " + this.message);
      }
    };

    OssecJsonAlertAttributesExtractor.prototype.user = function() {
      this.user = this.ossecAlert.acct;
      this.attributes["user"] = this.user;
      if (debug) {
        return console.log("User: " + this.user);
      }
    };

    return OssecJsonAlertAttributesExtractor;

  })();

  module.exports = OssecJsonAlertAttributesExtractor;

}).call(this);
