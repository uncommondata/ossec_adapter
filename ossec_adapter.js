// Generated by CoffeeScript 1.6.3
(function() {
  var ClientSocket, OssecClient, ProcessOssecAlert, WebSocket, fs, optimist, root,
    __slice = [].slice;

  optimist = require('optimist');

  WebSocket = require('ws');

  fs = require('fs');

  ProcessOssecAlert = require('./process_ossec_alert');

  root = global;

  root.debug = false;

  OssecClient = (function() {
    function OssecClient() {}

    OssecClient.prototype.run = function() {
      var argv;
      optimist.usage('Uncommon Data OSSEC Adapter');
      optimist.options('f', {
        describe: 'Syslog file containing OSSEC JSON alerts',
        "default": process.argv.f
      });
      optimist.options('s', {
        describe: 'Read from STDIN (expecting Syslog file w/OSSEC JSON alerts)'
      });
      optimist.options('h', {
        describe: 'Show this message'
      });
      argv = optimist.argv;
      if (argv.f) {
        return this.readFromSyslogFile(argv.f);
      } else if (argv.s) {
        return this.readFromStdIn();
      } else {
        return console.log(optimist.help());
      }
    };

    OssecClient.prototype.readFromStdIn = function() {
      var stdin;
      stdin = process.openStdin();
      stdin.setEncoding('utf8');
      return stdin.on('data', function(ossec_syslog_alert) {
        this.processAlert = new ProcessOssecAlert(ossec_syslog_alert);
        return this.processAlert.run();
      });
    };

    OssecClient.prototype.readFromSyslogFile = function(filePath) {
      var last, stream;
      stream = fs.createReadStream(filePath, 'utf8');
      last = "";
      return stream.on('data', function(chunk) {
        var lines, logLine, _i, _j, _len, _ref, _results;
        lines = (last + chunk).replace(/\\\|/g, '').split("\n");
        _ref = lines, lines = 2 <= _ref.length ? __slice.call(_ref, 0, _i = _ref.length - 1) : (_i = 0, []), last = _ref[_i++];
        _results = [];
        for (_j = 0, _len = lines.length; _j < _len; _j++) {
          logLine = lines[_j];
          this.processAlert = new ProcessOssecAlert(logLine);
          _results.push(this.processAlert.run());
        }
        return _results;
      });
    };

    return OssecClient;

  })();

  ClientSocket = (function() {
    function ClientSocket() {
      var config;
      config = {
        key: "c07626c85eb3c13205b32005df582dbd",
        host: "uncommondata.herokuapp.com",
        port: 80
      };
      new WebSocket("ws://" + config.host + ":" + config.port);
      if (debug) {
        console.log("Establishing websocket connection... ");
      }
    }

    return ClientSocket;

  })();

  new OssecClient().run();

}).call(this);

/*
//@ sourceMappingURL=ossec_adapter.map
*/
